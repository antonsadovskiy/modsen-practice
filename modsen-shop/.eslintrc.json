{
  "root": true,
  "plugins": [
    "react-hooks",
    "promise",
    "sonarjs",
    "@typescript-eslint",
    "import"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "tsconfigRootDir": "."
  },
  "extends": [
    "eslint:recommended",
    "plugin:promise/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "prettier"
  ],
  "ignorePatterns": [
    "public/*"
  ],
  "rules": {
    "import/no-default-export": "warn",
    "no-duplicate-imports": [
      "error",
      {
        "includeExports": true
      }
    ],
    "no-template-curly-in-string": "error",
    "block-scoped-var": "error",
    "curly": [
      "error",
      "all"
    ],
    "eqeqeq": "error",
    "no-alert": "warn",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-multi-spaces": "error",
    "no-negated-condition": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-return-await": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-throw-literal": "error",
    "no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": true,
        "allowTernary": true
      }
    ],
    "no-useless-call": "error",
    "no-useless-concat": "error",
    "no-useless-return": "error",
    "prefer-promise-reject-errors": "error",
    "no-undefined": "off",
    "array-bracket-newline": [
      "error",
      "consistent"
    ],
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "comma-style": "error",
    "eol-last": "error",
    "key-spacing": "error",
    "keyword-spacing": "error",
    "new-parens": "error",
    "no-bitwise": "warn",
    "no-lonely-if": "warn",
    "no-multiple-empty-lines": "error",
    "no-nested-ternary": "error",
    "no-new-object": "error",
    "no-trailing-spaces": "error",
    "no-unneeded-ternary": "error",
    "no-whitespace-before-property": "error",
    "object-curly-newline": "error",
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "semi-spacing": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "space-in-parens": "error",
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "switch-colon-spacing": "error",
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    // "arrow-parens": ["error", "as-needed"],
    "arrow-spacing": "error",
    "generator-star-spacing": [
      "error",
      "after"
    ],
    "no-useless-computed-key": "error",
    "no-useless-rename": "error",
    "object-shorthand": [
      "error",
      "always"
    ],
    "prefer-arrow-callback": "warn",
    "prefer-destructuring": "off",
    "rest-spread-spacing": [
      "error",
      "never"
    ],
    "template-curly-spacing": "error",
    "promise/always-return": "off",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi"
        }
      }
    ],
    "@typescript-eslint/member-ordering": "off",
    // иначе ругается на flow экшны mobx
    "@typescript-eslint/brace-style": [
      "error",
      "1tbs"
    ],
    "@typescript-eslint/quotes": [
      "error",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "@typescript-eslint/func-call-spacing": [
      "error",
      "never"
    ],
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/no-unnecessary-type-arguments": "warn",
    "@typescript-eslint/prefer-function-type": "warn",
    "@typescript-eslint/prefer-readonly": "warn",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/no-floating-promises": [
      "off",
      {
        "ignoreVoid": true,
        "ignoreIIFE": true
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowAny": true
      }
    ],
    "@typescript-eslint/unbound-method": "warn",
    "sonarjs/cognitive-complexity": "off",
    "sonarjs/no-duplicate-string": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "import/no-unresolved": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "import/default": "off",
    "@typescript-eslint/no-for-in-array": "warn"
  }
}
